{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAceA,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAC3B,OACC,sBAAKC,UAAU,sDAAf,UACC,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCACC,6BAAKF,IACL,4BAAIC,WCcOK,EAnBC,SAAC,GAAe,IAAbC,EAAY,EAAZA,OAClB,OACI,8BAEGA,EAAOC,KAAI,SAACC,EAAMC,GACvB,OACC,cAAC,EAAD,CAEAR,GAAIK,EAAOG,GAAGV,KACdA,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCKMC,EAbG,SAAC,GAAiC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aACjC,OACC,qBAAKV,UAAU,MAAf,SACE,uBACGA,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCFI,EARA,SAACC,GACf,OACC,qBAAKC,MAAO,CAAEC,UAAU,SAASC,OAAQ,kBAAkBC,OAAQ,SAAnE,SACEJ,EAAMK,YCgBKC,E,kDAlBd,WAAYN,GAAQ,IAAD,8BAClB,cAAMA,IACDO,MAAQ,CACZC,UAAU,GAHO,E,qDAMnB,SAAkBC,EAAOC,GACxBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG3B,WACC,OAAGG,KAAKJ,MAAMC,SACN,0DAEDG,KAAKX,MAAMK,a,GAfOQ,aC4CZC,G,wDAtCZ,aAAe,IAAD,8BACb,gBAWDC,eAAiB,SAACC,GACjB,EAAKJ,SAAS,CAAElB,YAAasB,EAAMC,OAAOC,SAX1C,EAAKX,MAAQ,CACXlB,OAAQ,GACPK,YAAa,IAJH,E,qDAOd,WAAoB,IAAD,OAClByB,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAG,EAAKX,SAAS,CAACvB,OAAOkC,S,oBAMvC,WAAU,IAAD,EACwBZ,KAAKJ,MAA7BlB,EADA,EACAA,OAAQK,EADR,EACQA,YACV8B,EAAiBnC,EAAOoC,QAAO,SAAAC,GACnC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASlC,EAAYiC,kBAEvD,OAAItC,EAAOwC,OAIX,sBAAK5C,UAAU,KAAf,UACC,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACI,cAAC,EAAD,CAAU1B,OAAQmC,WARjB,6C,GAvBMX,cCKHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDX,M","file":"static/js/main.65ceaf91.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Card = ({name, email, id}) => {\r\n\treturn (\r\n\t\t<div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n\t\t\t<img alt='robots' src={`https://robohash.org/${id}?200*200`} />\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList =({ robots}) => {\r\n\treturn(\r\n \t   <div>\r\n \t     {\r\n\t \t     robots.map((user, i) => {\r\n\t\t\treturn( \r\n\t\t\t\t<Card \r\n\t\t\t\tkey={i} \r\n\t\t\t\tid={robots[i].name} \r\n\t\t\t\tname={robots[i].name} \r\n\t\t\t\temail={robots[i].email}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t  })\r\n\t \t }\r\n\t   </div>\r\n);\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchfield, searchChange}) => {\r\n\treturn(\r\n\t\t<div className='pa2'>\r\n\t\t  <input \r\n\t\t     className='pa3 ba b--green bg-lightest-blue'\r\n\t\t     type='search' \r\n\t\t     placeholder='search robots'\r\n\t\t     onChange={searchChange} \r\n\t\t    />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n\treturn(\r\n\t\t<div style={{ overflowY:'scroll',border: '5px solid black',height: '800px'}}>\r\n\t\t {props.children}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component{\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thasError: false\r\n\t\t}\r\n\t}\r\n\tcomponentDidCatch(error, info){\r\n\t\tthis.setState({ hasError: true})\r\n\r\n\t}\r\n\trender(){\r\n\t\tif(this.state.hasError){\r\n\t\t\treturn <h1>Oooops. That is not good</h1>\r\n\t\t}\r\n\t\treturn this.props.children\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundry;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport './App.css'\r\n\r\nclass App extends Component {\r\n  \tconstructor() {\r\n  \t\tsuper()\r\n  \t\tthis.state = {\r\n  \t\t\t robots: [],\r\n\t\t     searchfield: ''\r\n  \t\t}\r\n  \t}\r\n  \tcomponentDidMount(){\r\n  \t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n  \t\t  .then(response=> response.json())\r\n  \t\t  .then(users=> this.setState({robots:users}));\r\n  \t}\r\n  \tonSearchChange = (event) => {\r\n  \t\tthis.setState({ searchfield: event.target.value })\r\n  \t\t  \t}\r\n\r\n  \trender() {\r\n  \t\tconst { robots, searchfield } = this.state;\r\n  \t\tconst filteredRobots = robots.filter(robot => {\r\n  \t\t  return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n  \t\t})\r\n  \t\tif(!robots.length) {\r\n  \t\t\treturn <h1>Loading</h1>\r\n  \t\t}\telse {\r\n\t\t\treturn (\r\n\t\t\t <div className='tc'>\r\n\t\t\t\t <h1 className='f1'>FunnyRobots</h1>\r\n\t\t\t\t <SearchBox searchChange={this.onSearchChange} />\r\n\t\t\t\t <Scroll>\r\n\t\t\t\t   <ErrorBoundry>\r\n\t\t \t     \t\t<CardList robots={filteredRobots} />\r\n\t\t \t       </ErrorBoundry>\r\n\t\t \t     </Scroll>\r\n\t\t \t </div>\r\n\t\t\t);\r\n\t\t}\r\n    }\r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}